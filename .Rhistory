ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-c(10, 40, 90)
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
coverage <- sapply(samples, function(samples) {
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
#hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * ssd
ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-c(10, 40, 90, 200)
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
coverage <- sapply(samples, function(samples) {
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
#hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * ssd
ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
require(ggplot2)
lambda<-.2
noofreps<-5000
samples<-c(10, 40, 90, 200)
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
coverage <- sapply(samples, function(samples) {
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
#hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * ssd
ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
qnorm(0.975)
data(ToothGrowth)
str(ToothGrowth)
require(ggplot2)
ggplot(ToothGrowth, aes(x=dose, y = len))+geom_point(size = 2)+facet_grid(. ~ supp)
summary(ToothGrowth)
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC05
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ15<-ToothGrowth[251:60,]
OJ15
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ15<-ToothGrowth[51:60,]
OJ15
a<- t.test(VC10, VC05, paried=FALSE)
a
a<- t.test(VC10$len, VC05$len, paried=FALSE)
a
str(a)
a$conf.int
a<- t.test(VC10$len, VC05$len, paried=FALSE)
a$conf.int[1]
a$conf.int[2]
a<- t.test(VC10$len, VC05$len, paried=FALSE)
lcb<-a$conf.int[1]
ucb<-a$conf.int[2]
if(ucb-lcb>abs(ucb)-abs(lcb)) {"does" else "does not"}`
if(ucb-lcb>abs(ucb)-abs(lcb)) {"does" else "does not"}
if(ucb-lcb>abs(ucb)-abs(lcb)) {"does"} else {"does not"}
t.test(OJ20$len-OJ05$len)
OJ20$len
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
##Ornage Juice Set
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ20<-ToothGrowth[51:60,]
t.test(OJ20$len$-OJ05$len)
t.test(OJ20$len$ - OJ05$len)
?t.test
t.test(OJ20$len$, OJ05$len, paired=FALSE)
t.test(OJ20$len$ ~ OJ05$len, paired=FALSE)
OJ20$len
OJ05$len
t.test(OJ20$len$ - OJ05$len, paired=FALSE)
library(UsingR)
install.packages("UsingR")
install.packages("UsingR")
data(father.son)
install.packages(c("Hmisc", "htmltools", "httr", "knitr", "labeling", "maps", "mime", "quantmod", "rmarkdown", "xtable"))
install.packages(c("boot", "class", "cluster", "codetools", "DBI", "gsubfn", "httr", "jsonlite", "KernSmooth", "MASS", "Matrix", "mgcv", "nlme", "Rcpp", "RCurl", "swirl", "testthat", "xlsx", "xlsxjars", "yaml"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
require(USingR)
require(UsingR)
data(father.son)
father.son$height
father.son$sheight
OJ20$len$
data(ToothGrowth)
data(ToothGrowth)
str(ToothGrowth)
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
##Ornage Juice Set
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ20<-ToothGrowth[51:60,]
t.test(OJ20$len - OJ05$len, paired=FALSE)
b<-t.test(OJ20$len - OJ05$len, paired=FALSE)
str(b)
b<-t.test(OJ20$len, OJ05$len, paired=FALSE)
str(b)
b
require(datasets)
install.packages("reshape2")
str(TothGrowth)
str(ToothGrowth)
require(reshape2)
wideTG<-dcast(ToothGrowth, len, supp, dose)
wideTG<-dcast(ToothGrowth, dose ~ supp, value.var="len")
str(wideTG)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="length")
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
head(wideTG)
str(wideTG)
wideTG<-dcast(ToothGrowth, dose + supp ~ len)
str(wideTG)
head(wideTG)
head(wideTG)
wideTG20 <- subset(wideTG, dose==2.0)
head(wideTG20)
test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
wideTG20 <- subset(wideTG, dose==2.0)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
data(ChickWeight)
wideCW<-dcast(ChickWeight, Diet + Chick ~ Time, value.var="weight")
head(wideCW)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="length")
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
str(ChickWeight)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
wideTG20 <- subset(wideTG, dose==2.0)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
str(wideTG)
str(wideCW)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
wideTG<-dcast(ToothGrowth, dose + supp ~ length, value.var="len")
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
install.packages("pandoc")
require(datasets)
data(toothGrowth)
data(ToothGrowth)
require(reshape2)
wideTG<-dcast(ToothGrowth, dose + supp ~ 1:10, value.var="len")
wideTG20 <- subset(wideTG, dose==2.0)
wide```
head(wideTG20)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(dose~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
str(wideTG20)
sample<-1:10
wideTG<-dcast(ToothGrowth, dose + supp ~ 1:10, value.var="len")
wideTG<-dcast(ToothGrowth, dose + supp ~ sample, value.var="len")
t.test(sample~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(supp~sample, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(len~sample, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(supp~sample, paired=FALSE, var.equal=TRUE, data=wideTG20)
require(datasets)
data(ToothGrowth)
require(reshape2)
sample<-1:10
wideTG<-dcast(ToothGrowth, dose + supp ~ sample, value.var="len")
t.test(len~dose, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(sample~dose, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(len~dose, paired=FALSE, var.equal=TRUE, data=wideTG20)
require(datasets)
data(ToothGrowth)
require(reshape2)
sample<-1:10
wideTG<-dcast(ToothGrowth, dose + supp ~ sample, value.var="len")
```
###alt test of 2.0
```{r "alt test 20"}
t.test(sample~supp, paired=FALSE, var.equal=TRUE, data = wideTG20)
source('~/Documents/TripcheckR/TwitterReader.R')
require(twitteR)
require(ROAuth)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "Ys4tfBmMdPcZT1zCvvInGyQ8a"
consumerSecret <- "t5k5I8kwqDkOiDtYVKgjGbBgZc8FVleGvubezLhD1aVVS0rp4s"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
name <- "TripCheckUS20"
user <- getUser(paste0("@", name))
user <- getUser("@TripCheckUS20")
user <- getUser("@TripCheckUS20B")
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
name <- "TripCheckUS20B"
user <- getUser(paste0("@", name))
user_data<-userTimeline(user, n=600, maxID=NULL, sinceID=NULL, includeRts=FALSE)
clean_data<-do.call(rbind,lapply(user_data,as.data.frame))
clean_data$created<-as.Date(hwy20_df$created)
clean_data$created<-as.Date(clean_data$created)
getwd()
setwd("TripcheckR")
write.csv(clean_data, paste0(name,".csv"))
##display a bunch of stuff
print(paste0(name,".csv"))
dim(clean_data)
head(clean_data)
source('~/Documents/TripcheckR/TwitterReader.R')
x
source('~/Documents/TripcheckR/TwitterReader.R')
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv")
)##convert data to dataframe
hwy20_df<-do.call(rbind,lapply(hwy20Bfull,as.data.frame))
hwy20_df<-hwy20Bfull
hwy_df<-hwy20Bfull
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv"))
##convert data to dataframe
hwy_df<-hwy20Bfull
```
dim(hwy_df)
##Get tweets with Santiam Pass
hwy20_Santiam <-hwy_df[grep("Santiam Pass Summit", hwy_df$text),]
hwy20_SantiamCrash <-hwy20_Santiam[grep("crash", hwy20_Santiam$text),]
##dedup the data
hwy20_SantiamCrash<-hwy20_SantiamCrash[!duplicated(hwy20_SantiamCrash$created),]
## get some details on the crash from teh text string
hwy20_SantiamCrash$text<-substring(hwy20_SantiamCrash$text,7,12)
dim(hwy20_SantiamCrash)
rangeYM<- c(hwy20_SantiamCrash$created[length(hwy20_SantiamCrash$created)], hwy20_SantiamCrash$created[1])
rangeYM
plot(NA,ylim=c(-1,1),xlim=rangeYM,ann=FALSE,axes=FALSE)
abline(h=0,lwd=2,col="#5B7FA3")
ypts <- rep_len(c(-1,1), length.out=nrow(hwy20_SantiamCrash))
txtpts <- rep_len(c(1,3), length.out=nrow(hwy20_SantiamCrash))
ylblpts <- rep_len(c(-.9,.9, -.7, .7, -.5, .5), length.out=nrow(hwy20_SantiamCrash))
lblpts <- rep_len(c(3,1), length.out=nrow(hwy20_SantiamCrash))
segments(hwy20_SantiamCrash$created,0,hwy20_SantiamCrash$created,ypts,col="gray80")
axis.Date(
1,
at=seq.Date(rangeYM[1],rangeYM[2],by="month"),
format="%Y-%m",
cex.axis=0.6,
pos=0,
lwd=0,
lwd.tick=2,
col="#5B7FA3",
font=2
)
points(hwy20_SantiamCrash$created,y=ypts, pch="-", cex=1.5, col="#5B7FA3")
par(xpd=NA)
text(
hwy20_SantiamCrash$created, y=ylblpts,
labels=hwy20_SantiamCrash$text, cex=0.5, pos=lblpts, srt=90
)
par(xpd=FALSE)
##timeline(hwy20_SantiamCrash)
rangeYM<- c(hwy20_SantiamCrash$created[length(hwy20_SantiamCrash$created)], hwy20_SantiamCrash$created[1])r
##This program assumes you have already run the TwitterReader.R to download a feed timeline.
##It reads the data in teh form of a .csv
## Get the relevnat tweet data
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv"))
##convert data to dataframe
hwy_df<-hwy20Bfull
dim(hwy_df)
##Get tweets with Santiam Pass
hwy20_Santiam <-hwy_df[grep("Santiam Pass Summit", hwy_df$text),]
hwy20_SantiamCrash <-hwy20_Santiam[grep("crash", hwy20_Santiam$text),]
##dedup the data
hwy20_SantiamCrash<-hwy20_SantiamCrash[!duplicated(hwy20_SantiamCrash$created),]
## get some details on the crash from teh text string
hwy20_SantiamCrash$text<-substring(hwy20_SantiamCrash$text,7,12)
dim(hwy20_SantiamCrash)
##timeline(hwy20_SantiamCrash)
rangeYM<- c(hwy20_SantiamCrash$created[length(hwy20_SantiamCrash$created)], hwy20_SantiamCrash$created[1])r
##timeline(hwy20_SantiamCrash)
rangeYM<- c(hwy20_SantiamCrash$created[length(hwy20_SantiamCrash$created)], hwy20_SantiamCrash$created[1])
rangeYM
##timeline(hwy20_SantiamCrash)
rangeYM<- c(hwy20_SantiamCrash$created[length(hwy20_SantiamCrash$created)], hwy20_SantiamCrash$created[1])
rangeYM
plot(NA,ylim=c(-1,1),xlim=rangeYM,ann=FALSE,axes=FALSE)
abline(h=0,lwd=2,col="#5B7FA3")
ypts <- rep_len(c(-1,1), length.out=nrow(hwy20_SantiamCrash))
rangeYM
plot(NA,ylim=c(-1,1),xlim=rangeYM,ann=FALSE,axes=FALSE)
abline(h=0,lwd=2,col="#5B7FA3")
ypts <- rep_len(c(-1,1), length.out=nrow(hwy20_SantiamCrash))
txtpts <- rep_len(c(1,3), length.out=nrow(hwy20_SantiamCrash))
ylblpts <- rep_len(c(-.9,.9, -.7, .7, -.5, .5), length.out=nrow(hwy20_SantiamCrash))
lblpts <- rep_len(c(3,1), length.out=nrow(hwy20_SantiamCrash))
segments(hwy20_SantiamCrash$created,0,hwy20_SantiamCrash$created,ypts,col="gray80")
axis.Date(
1,
at=seq.Date(rangeYM[1],rangeYM[2],by="month"),
format="%Y-%m",
cex.axis=0.6,
pos=0,
lwd=0,
lwd.tick=2,
col="#5B7FA3",
font=2
)
points(hwy20_SantiamCrash$created,y=ypts, pch="-", cex=1.5, col="#5B7FA3")
par(xpd=NA)
text(
hwy20_SantiamCrash$created, y=ylblpts,
labels=hwy20_SantiamCrash$text, cex=0.5, pos=lblpts, srt=90
)
par(xpd=FALSE)
plot(NA,ylim=c(-1,1),xlim=rangeYM,ann=FALSE,axes=FALSE)
abline(h=0,lwd=2,col="#5B7FA3")
ypts <- rep_len(c(-1,1), length.out=nrow(hwy20_SantiamCrash))
txtpts <- rep_len(c(1,3), length.out=nrow(hwy20_SantiamCrash))
ylblpts <- rep_len(c(-.9,.9, -.7, .7, -.5, .5), length.out=nrow(hwy20_SantiamCrash))
lblpts <- rep_len(c(3,1), length.out=nrow(hwy20_SantiamCrash))
segments(hwy20_SantiamCrash$created,0,hwy20_SantiamCrash$created,ypts,col="gray80")
?segments
segments(x0=hwy20_SantiamCrash$created,y0=0,x1=hwy20_SantiamCrash$created,y0=ypts,col="gray80")
head(hwy20_SantiamCrash$created)
dim(hwy20_SantiamCrash$created)
len(hwy20_SantiamCrash$created)
length(hwy20_SantiamCrash$created)
segments(hwy20_SantiamCrash$created,0,hwy20_SantiamCrash$created,1,col="gray80")
hwy20_SantiamCrash$created[1:10]
y0pts = rep_len(0, length.out=nrow(hwy20_SantiamCrash))
segments(hwy20_SantiamCrash$created,y0pts,hwy20_SantiamCrash$created,1,col="gray80")
str(hwy20_SantiamCrash$created)
segments(as.Date(hwy20_SantiamCrash$created),y0pts,as.Date(hwy20_SantiamCrash$created),1,col="gray80")
?grepexpr
?gregexpr
hwy20_SantiamCrashes$text[1:5,]
hwy20_SantiamCrash$text[1:5,]
hwy20_SantiamCrash$text[1:5]
?lapply
hwy20_SantiamCrash <-hwy20_Santiam[grep("crash", hwy20_Santiam$text),]
dim(hwy20_SantiamCrash)
hwy20_SantiamCrash<-hwy20_SantiamCrash[!duplicated(hwy20_SantiamCrash$created),]
dim(hwy20_SantiamCrash)
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x),
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x),
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x)
substring(x, y-3, y-1)})
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x)
if (y != NA) substring(x, y-3, y-1)})
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x)
print(y)
if (y != FALSE) substring(x, y-3, y-1)})
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x)
print(y)})
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x)
print(y[1])})
print(y[1,1])})
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- gregexpr("Mi", x)
print(y[1])})
midist
str(midist)
m<-as.data.frame(midist)
head(midist)
midist[6,1]
dim(midist)
length(midist)
midist[1]
m<-as.data.frame(midist[1])
m
m
midist[1]
str(midist)
midist[[1]][1]
midist[[2]][1]
midist[[10]][1]
midist[[10]][1][1]
midist
midist[[31]]
midist[[31]][1]
midist[[31]][1][1]
attr(midist[[31]], "match.length")
attr(midist[[31]][1], "match.length")
attr(midist, "match.length")
attr(midist, "match.length")
midist[1]
midist[1][1]
midist[1][2]
midist[1][1]
attr(midist)
?attr
attributes(midist)
?grep
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- grep("Mi", x)
print(y)})
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
print(y)})
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
print(y[1])})
midist
midist[[1]]
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
if (y >4) substring(hwy20_SantiamCrash$text,y-3,y-1)
else "NA"})
midist
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
if (y >4) substring(x,y-3,y-1)
else "NA"})
midist
mmm<-as.numeric(midist)
mmm
dir<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
if (y >4) substring(x,y+2,y+3)
else "NA"})
dir
table(dir)
as.vector(dir)
table(dir)
table(midist)
table(as.data.frame(midist))
table(as.numeric(midist))
table(as.character(dir))
?mutate
??mutate
dim(hwy_df)
##Get tweets with Santiam Pass
hwy20_Santiam <-hwy_df[grep("Santiam Pass Summit", hwy_df$text),]
hwy20_SantiamCrash <-hwy20_Santiam[grep("crash", hwy20_Santiam$text),]
##dedup the data
hwy20_SantiamCrash<-hwy20_SantiamCrash[!duplicated(hwy20_SantiamCrash$created),]
## get some details on the crash from teh text string
##this usually will have a mile number
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
if (y >4) substring(x,y-3,y-1)
else "NA"})
# if (y != FALSE) substring(x, y-3, y-1)})
distance<-as.numeric(midist)
direction<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
if (y >4) substring(x,y+2,y+3)
else "NA"})
#hwy20_SantiamCrash$text<-substring(hwy20_SantiamCrash$text,7,12)
direction<-as.character(dirirection)
direction<-as.character(direction)
plotdata<-cbind(hwy20_SantaimCrash$created, distance, direction)
plotdata<-cbind(hwy20_SantiamCrash$created, distance, direction)
dim(plotdata)
head(plotdata)
plotdata<-cbind(as.Date(hwy20_SantiamCrash$created), distance, direction)
dim(plotdata)
head(plotdata)
plotdata<-cbind(as.Date(hwy20_SantiamCrash$created), as.numeric(distance), as.character(direction)
dim(plotdata)
plotdata<-cbind(as.Date(hwy20_SantiamCrash$created), as.numeric(distance), as.character(direction) )
dim(plotdata)
head(plotdata)
plotdata<-cbind(hwy20_SantiamCrash$created, distance, direction )
dim(plotdata)
head(plotdata)
hwy20_SantiamCrash$created
str(hwy20_SantiamCrash$created)
as.Date(hwy20_SantiamCrash$created)
hwy20_SantiamCrash$created<-as.Date(hwy20_SantiamCrash$created)
plotdata<-cbind(hwy20_SantiamCrash$created, distance, direction )
dim(plotdata)
head(plotdata)
plotdata[,1]<-as.Date[plotdata[,1]]
plotdata[,1]<-as.Date(plotdata[,1])
dim(plotdata)
head(plotdata)
