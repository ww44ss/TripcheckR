ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-1/lambda)
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=0, sd=1), add=TRUE)
mean
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata))
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=0, sd=1/lambda/(lambda*samples)), add=TRUE)
mean
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata))
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=0, sd=sqrt(1/lambda/(lambda*samples))), add=TRUE)
mean
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
lambda/(lambda*samples)
1/lambda/(lambda*samples)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata))
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=1/lambda, sd=sqrt(1/lambda/(lambda*samples))), add=TRUE)
mean
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
pmean=1/lambda
psd=sqrt(1/lambda/(lambda*samples))
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/psd
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=1/lambda, sd=sqrt(1/lambda/(lambda*samples))), add=TRUE)
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
pmean=1/lambda
psd=sqrt(1/lambda/(lambda*samples))
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/psd
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=1, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
pmean=1/lambda
psd=sqrt(1/lambda/(lambda*samples))
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/psd
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
pmean=1/lambda
psd=sqrt(1/lambda/(lambda*samples))
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/psd
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/psd
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
hist(expmeans, prob=TRUE)
curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * sqrt(1/samples)
ul <- expmeans + qnorm(0.975) * sqrt(1/samples)
mean(ll < lambda & ul > lambda)
lhats[1:5]
ll[1:5]
ul[1:5]
sqrt(1/nosim)
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-90
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
coverage <- sapply(samples, function(samples) {
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
#hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * ssd
ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-c(10, 40, 90)
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
coverage <- sapply(samples, function(samples) {
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
#hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * ssd
ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
require(ggplot2)
lambda<-.2
noofreps<-1000
samples<-c(10, 40, 90, 200)
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
coverage <- sapply(samples, function(samples) {
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
#hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * ssd
ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
require(ggplot2)
lambda<-.2
noofreps<-5000
samples<-c(10, 40, 90, 200)
pmean=1/lambda
psd=1/lambda
ssd=psd/sqrt(samples)
coverage <- sapply(samples, function(samples) {
rdata <- replicate(noofreps, rexp(samples, lambda))
expmeans <- (colMeans(rdata)-pmean)/ssd
mean<-mean(expmeans)
#hist(expmeans, prob=TRUE)
#curve(dnorm(x, mean=0, sd=1), add=TRUE)
ll <- expmeans - qnorm(0.975) * ssd
ul <- expmeans + qnorm(0.975) * ssd
mean(ll < 0 & ul > 0)
})
coverage
qnorm(0.975)
data(ToothGrowth)
str(ToothGrowth)
require(ggplot2)
ggplot(ToothGrowth, aes(x=dose, y = len))+geom_point(size = 2)+facet_grid(. ~ supp)
summary(ToothGrowth)
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC05
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ15<-ToothGrowth[251:60,]
OJ15
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ15<-ToothGrowth[51:60,]
OJ15
a<- t.test(VC10, VC05, paried=FALSE)
a
a<- t.test(VC10$len, VC05$len, paried=FALSE)
a
str(a)
a$conf.int
a<- t.test(VC10$len, VC05$len, paried=FALSE)
a$conf.int[1]
a$conf.int[2]
a<- t.test(VC10$len, VC05$len, paried=FALSE)
lcb<-a$conf.int[1]
ucb<-a$conf.int[2]
if(ucb-lcb>abs(ucb)-abs(lcb)) {"does" else "does not"}`
if(ucb-lcb>abs(ucb)-abs(lcb)) {"does" else "does not"}
if(ucb-lcb>abs(ucb)-abs(lcb)) {"does"} else {"does not"}
t.test(OJ20$len-OJ05$len)
OJ20$len
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
##Ornage Juice Set
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ20<-ToothGrowth[51:60,]
t.test(OJ20$len$-OJ05$len)
t.test(OJ20$len$ - OJ05$len)
?t.test
t.test(OJ20$len$, OJ05$len, paired=FALSE)
t.test(OJ20$len$ ~ OJ05$len, paired=FALSE)
OJ20$len
OJ05$len
t.test(OJ20$len$ - OJ05$len, paired=FALSE)
library(UsingR)
install.packages("UsingR")
install.packages("UsingR")
data(father.son)
install.packages(c("Hmisc", "htmltools", "httr", "knitr", "labeling", "maps", "mime", "quantmod", "rmarkdown", "xtable"))
install.packages(c("boot", "class", "cluster", "codetools", "DBI", "gsubfn", "httr", "jsonlite", "KernSmooth", "MASS", "Matrix", "mgcv", "nlme", "Rcpp", "RCurl", "swirl", "testthat", "xlsx", "xlsxjars", "yaml"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
require(USingR)
require(UsingR)
data(father.son)
father.son$height
father.son$sheight
OJ20$len$
data(ToothGrowth)
data(ToothGrowth)
str(ToothGrowth)
VC05<-ToothGrowth[1:10,]
VC10<-ToothGrowth[11:20,]
VC20<-ToothGrowth[21:30,]
##Ornage Juice Set
OJ05<-ToothGrowth[31:40,]
OJ10<-ToothGrowth[41:50,]
OJ20<-ToothGrowth[51:60,]
t.test(OJ20$len - OJ05$len, paired=FALSE)
b<-t.test(OJ20$len - OJ05$len, paired=FALSE)
str(b)
b<-t.test(OJ20$len, OJ05$len, paired=FALSE)
str(b)
b
require(datasets)
install.packages("reshape2")
str(TothGrowth)
str(ToothGrowth)
require(reshape2)
wideTG<-dcast(ToothGrowth, len, supp, dose)
wideTG<-dcast(ToothGrowth, dose ~ supp, value.var="len")
str(wideTG)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="length")
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
head(wideTG)
str(wideTG)
wideTG<-dcast(ToothGrowth, dose + supp ~ len)
str(wideTG)
head(wideTG)
head(wideTG)
wideTG20 <- subset(wideTG, dose==2.0)
head(wideTG20)
test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
wideTG20 <- subset(wideTG, dose==2.0)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
data(ChickWeight)
wideCW<-dcast(ChickWeight, Diet + Chick ~ Time, value.var="weight")
head(wideCW)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="length")
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
str(ChickWeight)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
wideTG20 <- subset(wideTG, dose==2.0)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
str(wideTG)
str(wideCW)
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
wideTG<-dcast(ToothGrowth, dose + supp ~ length, value.var="len")
wideTG<-dcast(ToothGrowth, dose + supp ~ len, value.var="len")
install.packages("pandoc")
require(datasets)
data(toothGrowth)
data(ToothGrowth)
require(reshape2)
wideTG<-dcast(ToothGrowth, dose + supp ~ 1:10, value.var="len")
wideTG20 <- subset(wideTG, dose==2.0)
wide```
head(wideTG20)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(dose~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
str(wideTG20)
sample<-1:10
wideTG<-dcast(ToothGrowth, dose + supp ~ 1:10, value.var="len")
wideTG<-dcast(ToothGrowth, dose + supp ~ sample, value.var="len")
t.test(sample~supp, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(supp~sample, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(len~sample, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(supp~sample, paired=FALSE, var.equal=TRUE, data=wideTG20)
require(datasets)
data(ToothGrowth)
require(reshape2)
sample<-1:10
wideTG<-dcast(ToothGrowth, dose + supp ~ sample, value.var="len")
t.test(len~dose, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(sample~dose, paired=FALSE, var.equal=TRUE, data=wideTG20)
t.test(len~dose, paired=FALSE, var.equal=TRUE, data=wideTG20)
require(datasets)
data(ToothGrowth)
require(reshape2)
sample<-1:10
wideTG<-dcast(ToothGrowth, dose + supp ~ sample, value.var="len")
```
###alt test of 2.0
```{r "alt test 20"}
t.test(sample~supp, paired=FALSE, var.equal=TRUE, data = wideTG20)
##This program assumes you have already run the TwitterReader.R to download a feed timeline.
##It reads the data in teh form of a .csv
## Get the relevnat tweet data
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv"))
##make the date column a date
hwy20Bfull$created<-as.Date(hwy20Bfull$created)
##convert data to dataframe
hwy_df<-hwy20Bfull
getwd()
setwd()="TripcheckR"
setwd()="/TripcheckR"
getwd()
setwd("TripcheckR")
##This program assumes you have already run the TwitterReader.R to download a feed timeline.
##It reads the data in teh form of a .csv
## Get the relevnat tweet data
if getwd()="/Users/winstonsaunders/Documents" setwd("TripcheckR")
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv"))
##make the date column a date
hwy20Bfull$created<-as.Date(hwy20Bfull$created)
##convert data to dataframe
hwy_df<-hwy20Bfull
##This program assumes you have already run the TwitterReader.R to download a feed timeline.
##It reads the data in teh form of a .csv
## Get the relevnat tweet data
if getwd()=="/Users/winstonsaunders/Documents" setwd("TripcheckR")
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv"))
##make the date column a date
hwy20Bfull$created<-as.Date(hwy20Bfull$created)
##convert data to dataframe
hwy_df<-hwy20Bfull
?if
?getwd
?if
##This program assumes you have already run the TwitterReader.R to download a feed timeline.
##It reads the data in teh form of a .csv
## Get the relevnat tweet data
if (getwd()=="/Users/winstonsaunders/Documents") setwd("TripcheckR")
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv"))
##make the date column a date
hwy20Bfull$created<-as.Date(hwy20Bfull$created)
##convert data to dataframe
hwy_df<-hwy20Bfull
##This program assumes you have already run the TwitterReader.R to download a feed timeline.
##It reads the data in teh form of a .csv
## Get the relevnat tweet data
if (getwd()=="/Users/winstonsaunders/Documents") {setwd("TripcheckR")}
file_name <- "TripCheckUS20B"
hwy20Bfull<-read.csv(paste0(file_name, ".csv"))
##make the date column a date
hwy20Bfull$created<-as.Date(hwy20Bfull$created)
##convert data to dataframe
hwy_df<-hwy20Bfull
str(hwy_df)
dim(hwy_df)
##Get tweets with Santiam Pass
hwy20_Santiam <-hwy_df[grep("Santiam Pass Summit", hwy_df$text),]
hwy20_SantiamCrash <-hwy20_Santiam[grep("crash", hwy20_Santiam$text),]
##dedup the data
hwy20_SantiamCrash<-hwy20_SantiamCrash[!duplicated(hwy20_SantiamCrash$created),]
## get some details on the crash from teh text string
##this usually will have a mile number
midist<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
if (y >4) substring(x,y-3,y-1)
else "NA"})
# if (y != FALSE) substring(x, y-3, y-1)})
distance<-as.numeric(midist)
direction<-lapply(hwy20_SantiamCrash$text, function(x) {y<- regexpr("Mi", x)
if (y >4) substring(x,y+2,y+3)
else "NA"})
hwy20_SantiamCrash$text<-substring(hwy20_SantiamCrash$text,7,12)
direction<-as.character(direction)
hwy20_SantiamCrash$created<-as.Date(hwy20_SantiamCrash$created)
plotdata<-cbind(hwy20_SantiamCrash$created, distance, direction )
##date in cbind is not working
plotdata[,1]<-as.Date(plotdata[,1])
dim(plotdata)
head(plotdata)
hwy20_SantiamCrash$created
plotdata<-cbind(hwy20_SantiamCrash, distance, direction )
str(plotdata)
plotdata<-cbind(hwy20_SantiamCrash[,6], distance, direction )
str(plotdata)
as.data.frame(plotdata)
plotdata$V1<-as.date(plotdata$V1)
plotdata$V1<-as.Date(plotdata$V1)
plotdata$direction
plotdata<-as.data.frame(plotdata)
plotdata$V1<-as.Date(plotdata$V1)
plotdata<-cbind(hwy20_SantiamCrash, distance, direction )
pd<-plotdata[,c(6,18,19)]
pd
pd<-complete.cases(pd)
pd
pd<-plotdata[,c(6,18,19)]
pd[complete.cases(pd),]
